name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        python-version: [ 3.9 ]
    name: Build
    runs-on: ${{ matrix.platform }}
    permissions: write-all
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full jq
          \cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script
        run: |
          python main.py

      - name: Get latest tag
        id: latest_tag
        run: |
          filename=$(ls ./cache/merge/ | grep ".zip$" | xargs -I{} basename {})
          echo "::set-output name=ClasMetaForWindowsFile::$filename"
          filename=$(ls ./cache/merge/ | grep ".apk$" | xargs -I{} basename {})
          echo "::set-output name=ClasMetaForAndroidFile::$filename"
          latest_tag=$(git describe --abbrev=0 --tags 2>/dev/null) || echo null
          echo "::set-output name=LATEST_TAG::$latest_tag"

      - name: Get latest release tag
        id: latest_release
        run: |
          curl -s "https://api.github.com/repos/Fndroid/clash_for_windows_pkg/releases/latest" > response.json
          tag_name=$(jq -r '.tag_name' response.json)
          echo "::set-output name=LATEST_RELEASE_TAG::$tag_name"

      - name: Build Changelog
        id: github_release
        if: ${{ steps.latest_tag.outputs.LATEST_TAG != steps.latest_release.outputs.LATEST_RELEASE_TAG }}
        run: |
          echo $(jq -r '.body' response.json) >> release_body
          echo "::set-output name=CHANGE_LOG::release_body"

      - name: Create Tag
        if: ${{ steps.latest_tag.outputs.LATEST_TAG != steps.latest_release.outputs.LATEST_RELEASE_TAG }}
        uses: negz/create-tag@v1
        continue-on-error: true
        with:
          version: ${{steps.latest_release.outputs.LATEST_RELEASE_TAG }}
          message: ${{steps.latest_release.outputs.LATEST_RELEASE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        if: ${{ steps.latest_tag.outputs.LATEST_TAG != steps.latest_release.outputs.LATEST_RELEASE_TAG }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.latest_release.outputs.LATEST_RELEASE_TAG }}
          release_name: Release V${{steps.latest_release.outputs.LATEST_RELEASE_TAG }}
          body_path: ${{ steps.github_release.outputs.CHANGE_LOG }}
          draft: false
          prerelease: false

      - name: Upload ClasMetaForWindows File
        if: ${{ steps.latest_tag.outputs.LATEST_TAG != steps.latest_release.outputs.LATEST_RELEASE_TAG }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cache/merge/${{ steps.latest_tag.outputs.ClasMetaForWindowsFile }}
          asset_name: ${{ steps.latest_tag.outputs.ClasMetaForWindowsFile }}
          asset_content_type: application/zip

      - name: Upload ClashMetaForAndroid File
        if: ${{ steps.latest_tag.outputs.LATEST_TAG != steps.latest_release.outputs.LATEST_RELEASE_TAG }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cache/merge/${{ steps.latest_tag.outputs.ClasMetaForAndroidFile }}
          asset_name: ${{ steps.latest_tag.outputs.ClasMetaForAndroidFile }}
          asset_content_type: application/vnd.android.package-archive